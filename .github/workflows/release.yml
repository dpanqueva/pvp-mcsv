name: Release Workflow
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Extract Version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          DOCKER_IMAGE="your-docker-username/your-repo-name:${{ env.VERSION }}"
          docker build -t "$DOCKER_IMAGE" .
          docker push "$DOCKER_IMAGE"

      - name: Create Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Update POM Version
        run: |
          CURRENT_VERSION="${{ env.VERSION }}"
          MAJOR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
          NEXT_VERSION="$((MAJOR+1)).0.0-SNAPSHOT"
          mvn versions:set -DnewVersion=${NEXT_VERSION} -DgenerateBackup=false
          git commit -am "Update version to ${NEXT_VERSION}"
          git push origin HEAD
